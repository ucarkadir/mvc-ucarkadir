@model ucarkadir.Models.User

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="sufee-login d-flex align-content-center flex-wrap">
    <div class="container">
        <div class="login-content">
            <div class="login-logo">
                <a href="index.html">
                    <img class="align-content" src="~/Content/Images/logo.png" alt="Ucar Kadir Logo" />
                </a>
            </div>
            <div class="login-form">

                @using (Html.BeginForm("Register", "Admin", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" }))
                {
                   
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, new { @class = "text-capitalize" })
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", placeHolder = "Please enter an username", @required = "required" })
                        <div class="invalid-feedback">
                            Please insert a User Name.
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EMail, new { @class = "text-capitalize" })
                        @Html.TextBoxFor(model => model.EMail, new { @class = "form-control", placeHolder = "Please Enter An Email Addres", @required = "required" })
                        <div class="invalid-feedback">
                            Please provide a valid email.
                        </div>
                    </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserPassword, new { @class = "text-capitalize" })
                            @Html.PasswordFor(model => model.UserPassword, new { @class = "form-control", placeHolder = "Please Enter An Password", @required = "required" })
                            <div class="invalid-feedback">
                                Please insert a password.
                            </div>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(model=>model.RememberMe, false) Agree the terms and policy
                            </label>
                        </div>
                        <button type="submit" class="btn btn-primary btn-flat m-b-30 m-t-30">Register</button>
                        
                       

                        <div class="register-link m-t-15 text-center">
                            <p>Already have account ? <a href="~/Admin/Login"> Sign in</a></p>
                        </div>

                }

            </div>
        </div>
    </div>
</div>



}

@section Scripts {   

    <script type="text/javascript">
            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (function () {
                'use strict';
                window.addEventListener('load', function () {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function (form) {
                        form.addEventListener('submit', function (event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });



                }, false);
        })();


    </script>
    
}


