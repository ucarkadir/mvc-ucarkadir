@model ucarkadir.Models.User

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="login-logo">
    <a href="index.html">
        <img class="align-content" src="http://dbhsoft.com/application/views/dbhsoft2/layouts/images/logo.png" alt="">
    </a>
</div>

@using (Html.BeginForm("Login", "Admin", FormMethod.Post , new { @class = "needs-validation", @novalidate = "novalidate" } ))
{
    @Html.AntiForgeryToken()




<div class="login-form">
    <div class="form-group">

        @Html.LabelFor(model => model.EMail, new { @class = "text-capitalize" })
        @Html.TextBoxFor(model => model.EMail, 
            new { type = "email", @class = "form-control", placeHolder = "Please enter an email", @required = "required" })
         <div class="invalid-feedback">
            Please provide a valid email.
        </div>


        @*
            @Html.LabelFor(model => model.EMail)
            @Html.TextBoxFor(model => model.EMail, new { @class = "form-control", placeHolder = "Lütfen Mail Giriniz", @required = "required" })
            @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
        *@
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserPassword, new { @class = "text-capitalize" })
        @Html.PasswordFor(model => model.UserPassword, new { @class = "form-control", placeHolder = "Please Enter An Password", @required = "required" })
        <div class="invalid-feedback">
            Please insert a password.
        </div>
    
    </div>
    <div class="checkbox">
        <label>            
            @Html.CheckBoxFor(m => m.RememberMe, false) Remember Me
        </label>
        <label class="pull-right">
            <a href="~/Admin/ForgetPassword">Forget Password?</a>
        </label>

    </div>

    <button type="submit" value="Login" class="btn btn-success btn-flat m-b-30 m-t-30">Login</button>

    @*@Html.ValidationSummary("", new { @class = "" })*@





    </div>

        }



        @section Scripts {
            @*@Scripts.Render("~/bundles/jqueryval")*@

            <script type="text/javascript">
                // Example starter JavaScript for disabling form submissions if there are invalid fields
                (function () {
                    'use strict';
                    window.addEventListener('load', function () {
                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.getElementsByClassName('needs-validation');
                        // Loop over them and prevent submission
                        var validation = Array.prototype.filter.call(forms, function (form) {
                            form.addEventListener('submit', function (event) {
                                if (form.checkValidity() === false) {
                                    event.preventDefault();
                                    event.stopPropagation();
                                }
                                form.classList.add('was-validated');
                            }, false);
                        });



                    }, false);
                })();


            </script>
        }
