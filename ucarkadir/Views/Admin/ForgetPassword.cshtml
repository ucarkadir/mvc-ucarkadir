@model ucarkadir.Models.User

@{
    ViewBag.Title = "ForgetPassword";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="login-form">
    
    @using (Html.BeginForm("ForgetPassword", "Admin", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" }))
    {
         @Html.AntiForgeryToken()

        <div class="form-group">

            @*@Html.LabelFor(m => m.EMail, new { @class = "col-md-2 control-label" })           
            @Html.TextBoxFor(model => model.EMail, new { @class = "form-control", placeHolder = "please enter an email address", @required = "required" })
            @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })*@


            @Html.LabelFor(model => model.EMail, new { @class = "control-label text-capitalize" })
            @Html.TextBoxFor(model => model.EMail, new { @class = "form-control", placeHolder = "Please Enter An Email Addres", @required = "required" })
            <div class="invalid-feedback">
                Please provide a valid email.
            </div>

        </div>

        <button type="submit" class="btn btn-primary btn-flat m-b-15">Send</button>
    }
    

    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
    


</div>



@section Scripts {
    
<script type="text/javascript">
            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (function () {
                'use strict';
                window.addEventListener('load', function () {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function (form) {
                        form.addEventListener('submit', function (event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });



                }, false);
        })();


</script>
}
